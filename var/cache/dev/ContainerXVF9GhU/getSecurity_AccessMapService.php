<?php

namespace ContainerXVF9GhU;


use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_AccessMapService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'security.access_map' shared service.
     *
     * @return \Symfony\Component\Security\Http\AccessMap
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-http'.\DIRECTORY_SEPARATOR.'AccessMapInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-http'.\DIRECTORY_SEPARATOR.'AccessMap.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-foundation'.\DIRECTORY_SEPARATOR.'RequestMatcherInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-foundation'.\DIRECTORY_SEPARATOR.'RequestMatcher.php';

        $container->privates['security.access_map'] = $instance = new \Symfony\Component\Security\Http\AccessMap();

        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/users'), [0 => 'ROLE_ADMINISTRATEUR'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/reclamations'), [0 => 'ROLE_PARTENAIRE', 1 => 'ROLE_ORGANISATEUR', 2 => 'ROLE_TRANSPORTEUR', 3 => 'ROLE_ADMINISTRATEUR', 4 => 'ROLE_UTILISATEUR'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/utilisateur'), [0 => 'ROLE_UTILISATEUR'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/reservation'), [0 => 'ROLE_UTILISATEUR'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/facture'), [0 => 'ROLE_UTILISATEUR'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/abonnement'), [0 => 'ROLE_UTILISATEUR'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/produit'), [0 => 'ROLE_PARTENAIRE'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/produit_front'), [0 => 'ROLE_PARTENAIRE', 1 => 'ROLE_ORGANISATEUR', 2 => 'ROLE_TRANSPORTEUR', 3 => 'ROLE_ADMIN', 4 => 'ROLE_UTILISATEUR'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/categorie/prod'), [0 => 'ROLE_PARTENAIRE'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/transport/back'), [0 => 'ROLE_TRANSPORTEUR'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/vehicule/back'), [0 => 'ROLE_TRANSPORTEUR'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/calendrier'), [0 => 'ROLE_TRANSPORTEUR'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/transport/back/transportStats'), [0 => 'ROLE_TRANSPORTEUR'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/evenement/back'), [0 => 'ROLE_ORGANISATEUR'], NULL);

        return $instance;
    }
}
